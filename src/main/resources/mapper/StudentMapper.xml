<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:分类管理 -->
<mapper namespace="cn.acyou.iblogdata.dao.StudentMapper">

    <resultMap id="BaseResultMap" type="cn.acyou.iblogdata.entity.Student">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="age" jdbcType="INTEGER" property="age" />
    </resultMap>

    <!-- collection的使用有两种resultMap和select，必须手动指定一种 -->
    <resultMap id="hasTeachers" type="cn.acyou.iblogdata.vo.StudentVo" extends="BaseResultMap">
        <collection property="teacherList" column="id" select="selectTeachers" ofType="cn.acyou.iblogdata.entity.Teacher" javaType="ArrayList" />
    </resultMap>

    <resultMap id="hasTeachers2" type="cn.acyou.iblogdata.vo.StudentVo" extends="BaseResultMap">
       <collection property="teacherList" resultMap="TeacherMap"/>
    </resultMap>

    <resultMap id="TeacherMap" type="cn.acyou.iblogdata.entity.Teacher">
        <id column="t_id" jdbcType="INTEGER" property="id" />
        <result column="t_name" jdbcType="VARCHAR" property="name" />
        <result column="t_age" jdbcType="INTEGER" property="age" />
    </resultMap>

    <sql id="Base_Column_List">
        id, name, age
    </sql>

    <select id="getStudentVo" resultMap="hasTeachers">
        SELECT * FROM student WHERE id = #{id}
    </select>

    <select id="getStudentVo2"  resultMap="hasTeachers2">
        SELECT s.id, s.name, s.age, t.id AS t_id, t.name AS t_name, t.age AS t_age FROM  student s
        LEFT JOIN teacher t ON s.id = t.student_id
        WHERE s.id = #{id}
    </select>

    <select id="selectTeachers" resultType="cn.acyou.iblogdata.entity.Teacher" parameterType="integer">
        SELECT * FROM teacher WHERE student_id = #{id}
    </select>

    <select id="getStudentsByPage" resultMap="BaseResultMap" parameterType="cn.acyou.iblogdata.so.StudentSo">
        SELECT p.* FROM student AS p
        <where>
            <if test="name!=null and name!=''">p.name LIKE "%"#{name}"%"</if>
        </where>
    </select>

    <select id="getStudentListByIds" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM student WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="updateList">
        <foreach collection="list" item="student">
            UPDATE student
            <set>
                <if test="student.name        != null">name      = #{student.name     },</if>
                <if test="student.age         != null">age       = #{student.age      },</if>
            </set>
            WHERE id = #{student.id};
        </foreach>
    </update>

    <delete id="deleteByPrimaryKeyList">
        DELETE FROM student WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>